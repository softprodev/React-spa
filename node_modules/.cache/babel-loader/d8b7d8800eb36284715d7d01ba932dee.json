{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\project\\\\spa-project\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\project\\\\spa-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\project\\\\spa-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\project\\\\spa-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\project\\\\spa-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\project\\\\spa-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\project\\\\spa-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\project\\\\spa-project\\\\src\\\\containers\\\\Auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, RightAlignedLink, AuthError } from '../../components/Auth';\nimport './Login.scss';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../../redux/modules/user';\nimport * as authActions from '../../redux/modules/auth';\nimport storage from 'lib/storage';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setError = function (message) {\n      var AuthActions = _this.props.AuthActions;\n      AuthActions.setError({\n        form: 'login',\n        message: message\n      });\n      return false;\n    };\n\n    _this.handleChange = function (e) {\n      var AuthActions = _this.props.AuthActions;\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      AuthActions.changeInput({\n        name: name,\n        value: value,\n        form: 'login'\n      });\n    };\n\n    _this.handleLocalLogin =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, form, AuthActions, UserActions, history, _form$toJS, email, password, loggedInfo;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, form = _this$props.form, AuthActions = _this$props.AuthActions, UserActions = _this$props.UserActions, history = _this$props.history;\n              _form$toJS = form.toJS(), email = _form$toJS.email, password = _form$toJS.password;\n              _context.prev = 2;\n              _context.next = 5;\n              return AuthActions.localLogin({\n                email: email,\n                password: password\n              });\n\n            case 5:\n              loggedInfo = _this.props.result.toJS();\n              UserActions.setLoggedInfo(loggedInfo);\n              history.push('/'); //메인으로 되돌림\n\n              storage.set('loggedInfo', loggedInfo);\n              _context.next = 22;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              if (!(_context.t0.response.status === 402)) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"return\", _this.setError('유효하지 않는 이메일입니다.'));\n\n            case 17:\n              if (!(_context.t0.response.status === 403)) {\n                _context.next = 21;\n                break;\n              }\n\n              return _context.abrupt(\"return\", _this.setError('유효하지 않은 암호입니다.'));\n\n            case 21:\n              return _context.abrupt(\"return\", _this.setError('알수없는 정보입니다.'));\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 11]]);\n    }));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var AuthActions = this.props.AuthActions;\n      AuthActions.initializeForm('login');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form$toJS = this.props.form.toJS(),\n          email = _this$props$form$toJS.email,\n          password = _this$props$form$toJS.password; //form에서 email과 password를 읽어온다.\n\n\n      var error = this.props.error;\n      var handleChange = this.handleChange,\n          handleLocalLogin = this.handleLocalLogin;\n      return React.createElement(AuthContent, {\n        title: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"email\",\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        type: \"password\",\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), error && React.createElement(AuthError, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, error), React.createElement(\"button\", {\n        onClick: handleLocalLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Login\"), React.createElement(RightAlignedLink, {\n        to: \"/auth/register/local\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Sign up?\"));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default connect( //props값으로 넣어 줄 상태를 정의해준다.\nfunction (state) {\n  return {\n    form: state.auth.getIn(['login', 'form']),\n    //login 안의 form 값\n    error: state.auth.getIn(['login', 'error']),\n    result: state.auth.get('result')\n  };\n}, //props값으로 넣어줄 액션 함수를 정의 해준다.\nfunction (dispatch) {\n  return {\n    AuthActions: bindActionCreators(authActions, dispatch),\n    UserActions: bindActionCreators(userActions, dispatch)\n  };\n})(Login);","map":{"version":3,"sources":["C:\\project\\spa-project\\src\\containers\\Auth\\Login.js"],"names":["React","Component","AuthContent","RightAlignedLink","AuthError","connect","bindActionCreators","userActions","authActions","storage","Login","setError","message","AuthActions","props","form","handleChange","e","target","name","value","changeInput","handleLocalLogin","UserActions","history","toJS","email","password","localLogin","loggedInfo","result","setLoggedInfo","push","set","response","status","initializeForm","error","state","auth","getIn","get","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { AuthContent,RightAlignedLink,AuthError} from '../../components/Auth';\nimport  './Login.scss';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as userActions from '../../redux/modules/user';\nimport * as authActions from '../../redux/modules/auth';\nimport storage from 'lib/storage';\n\n\nclass Login extends Component {\n\n    componentWillUnmount() {\n        const { AuthActions } = this.props;\n        AuthActions.initializeForm('login');\n    }\n    setError = (message) => {\n        const { AuthActions } = this.props;\n        AuthActions.setError({\n            form : 'login',\n            message\n        });\n        return false;\n    }\n    \n    handleChange = (e) => {\n        const { AuthActions } = this.props;\n        const { name, value} =e.target;\n\n        AuthActions.changeInput({\n            name,\n            value,\n            form:'login'\n        });\n    }\n    handleLocalLogin = async () => {\n        const { form,AuthActions,UserActions,history } = this.props;\n        const { email, password } = form.toJS();\n\n        try {\n            await AuthActions.localLogin({email,password});\n            const loggedInfo = this.props.result.toJS();\n            UserActions.setLoggedInfo(loggedInfo);\n            history.push('/'); //메인으로 되돌림\n            storage.set('loggedInfo',loggedInfo);\n            \n        } catch(e) {\n            if(e.response.status === 402) {\n                    return this.setError('유효하지 않는 이메일입니다.');\n            }\n            else if(e.response.status ===403){\n                return this.setError('유효하지 않은 암호입니다.');\n            }\n            else{\n                return this.setError('알수없는 정보입니다.')\n            }\n      \n        }\n    }\n    \n    render() {\n        const { email, password } = this.props.form.toJS(); //form에서 email과 password를 읽어온다.\n        const { error } = this.props;\n        const { handleChange ,handleLocalLogin}= this;\n        return (\n            <AuthContent title=\"Login\">\n            <input name=\"email\" placeholder=\"E-mail\" value={email} onChange={handleChange}/>\n            <input name=\"password\" placeholder=\"Password\" value={password}type=\"password\"\n            onChange={handleChange}/>\n            {\n                error && <AuthError>{error}</AuthError>\n            }\n            <button onClick={handleLocalLogin}>Login</button>\n            <RightAlignedLink to=\"/auth/register/local\">Sign up?</RightAlignedLink>\n            </AuthContent>\n        );\n    }\n}\n\nexport default connect(\n\n    //props값으로 넣어 줄 상태를 정의해준다.\n    (state) => ({\n        form : state.auth.getIn(['login','form']), //login 안의 form 값\n        error: state.auth.getIn(['login','error']),\n        result: state.auth.get('result')\n    }),\n//props값으로 넣어줄 액션 함수를 정의 해준다.\n    (dispatch) => ({\n        AuthActions : bindActionCreators(authActions,dispatch),\n        UserActions : bindActionCreators(userActions,dispatch)\n    })\n)(Login);"]},"metadata":{},"sourceType":"module"}