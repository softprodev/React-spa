{"ast":null,"code":"//로컬 스토리지에 json 형태로 저장 /불러오기 /삭제 를 도와주는 헬퍼\nvar storage = {\n  set: function set(key, object) {\n    if (!localStorage) return;\n    localStorage[key] = typeof object === 'string' ? object : JSON.stringify(object); //v파라미터가 객체형식일시 자동으로 JSON.stringify 으로 바꿔줌.\n    //일반문자열일시 그대로 넣어줌 .\n  },\n  get: function get(key) {\n    if (!localStorage) return null; //로컬스토라지가 없으면 null\n\n    if (!localStorage[key]) {\n      return null;\n    }\n\n    try {\n      var parsed = JSON.parse(localStorage[key]); //json으로 변환\n\n      return parsed;\n    } catch (e) {\n      return localStorage[key];\n    }\n  },\n  remove: function remove(key) {\n    if (!localStorage) return null;\n\n    if (localStorage[key]) {\n      localStorage.removeItem(key); //아이템 제거\n    }\n  }\n};\nexport default storage;","map":{"version":3,"sources":["C:\\project\\spa-project\\src\\lib\\storage.js"],"names":["storage","set","key","object","localStorage","JSON","stringify","get","parsed","parse","e","remove","removeItem"],"mappings":"AAAA;AACA,IAAMA,OAAO,GAAG;AACZC,EAAAA,GAAG,EAAE,aAACC,GAAD,EAAMC,MAAN,EAAiB;AAClB,QAAG,CAACC,YAAJ,EAAkB;AAClBA,IAAAA,YAAY,CAACF,GAAD,CAAZ,GAAqB,OAAOC,MAAR,KAAoB,QAApB,GAA+BA,MAA/B,GAAwCE,IAAI,CAACC,SAAL,CAAeH,MAAf,CAA5D,CAFkB,CAGlB;AACA;AACH,GANW;AAOZI,EAAAA,GAAG,EAAE,aAACL,GAAD,EAAS;AACd,QAAG,CAACE,YAAJ,EAAkB,OAAO,IAAP,CADJ,CAEV;;AACJ,QAAG,CAACA,YAAY,CAACF,GAAD,CAAhB,EAAsB;AAClB,aAAO,IAAP;AACH;;AAED,QAAG;AACC,UAAMM,MAAM,GAAGH,IAAI,CAACI,KAAL,CAAWL,YAAY,CAACF,GAAD,CAAvB,CAAf,CADD,CAC+C;;AAC9C,aAAOM,MAAP;AACH,KAHD,CAGE,OAAME,CAAN,EAAS;AACP,aAAON,YAAY,CAACF,GAAD,CAAnB;AACH;AACA,GApBW;AAqBZS,EAAAA,MAAM,EAAG,gBAACT,GAAD,EAAS;AACd,QAAG,CAACE,YAAJ,EAAkB,OAAO,IAAP;;AAElB,QAAGA,YAAY,CAACF,GAAD,CAAf,EAAqB;AACjBE,MAAAA,YAAY,CAACQ,UAAb,CAAwBV,GAAxB,EADiB,CACa;AACjC;AACJ;AA3BW,CAAhB;AA8BI,eAAeF,OAAf","sourcesContent":["//로컬 스토리지에 json 형태로 저장 /불러오기 /삭제 를 도와주는 헬퍼\nconst storage = {\n    set: (key, object) => {\n        if(!localStorage) return;\n        localStorage[key] = (typeof object) === 'string' ? object : JSON.stringify(object);\n        //v파라미터가 객체형식일시 자동으로 JSON.stringify 으로 바꿔줌.\n        //일반문자열일시 그대로 넣어줌 .\n    },\n    get: (key) => {\n    if(!localStorage) return null;\n        //로컬스토라지가 없으면 null\n    if(!localStorage[key]){\n        return null;\n    }\n    \n    try{\n        const parsed = JSON.parse(localStorage[key]); //json으로 변환\n        return parsed;\n    } catch(e) {\n        return localStorage[key];\n    }\n    },\n    remove : (key) => {\n        if(!localStorage) return null;\n\n        if(localStorage[key]){\n            localStorage.removeItem(key); //아이템 제거\n        }\n    }\n    };\n\n    export default storage;\n"]},"metadata":{},"sourceType":"module"}